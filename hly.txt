契约锁电话面试
1.const [a, b] = [b, a];翻译成es5是什么
2.es6装饰器有没有用过
3怎么把一个readme转成一个html
4怎么把一个js项目转成ts项目
5一个仓库的旧分支没有上代码规范，有没有什么方便快捷的方法把这些分支的所有代码都上代码规范

喜马拉雅一面
1.怎么从头开始搭建一个react项目（不用create-react-app）
2.让你做项目的性能优化能想到什么点
  我答了 ssr/webpack/loadable-components/长列表懒加载/react.memo/purecomponent/usememo/usecallback
  炎哥说可能是想让我回答cdn
3.promise.all
4.hook遇到过哪些坑
5.react fiber
6.怎么用setTimeout实现setInterval，用哪个好，为什么

pdd商业化一面+二面
1.css有哪些格式化上下文？  BFC IFC FFC GFC
2.耗时长的计算或者请求该如何处理？ 时间分片、提前处置、缓存、让后端去做
3.css变量有没有用过
4.loadable-component原理
5.如何用前端代码监测接口性能
6.有没有了解mobx，跟redux有什么区别
7.css module
8.ts的联合类型和交叉类型
9.怎么保证代码风格和规范，有什么工具
10.ts类型推导里面的infer怎么用
11.ts泛型 <T = string>和<T extends string>有什么区别
12.type和interface区别
13.commenjs和es6 module有什么区别
14.scss怎么写函数，怎么写变量
15.对自己两年内的职业生涯规划
16.一面算法题： https://leetcode-cn.com/problems/valid-parentheses/  实现object.get
17.二面算法题： 约瑟夫环（用数组实现）  一个树，每个节点上有name属性，写一个fn，传进去根节点和一个字符串，返回一个二维数组，二维数组里面的每一项是name=string的节点的遍历路径，要求深度遍历和广度遍历都写一下
18.清理浮动的方式，为什么clear both能够清除浮动
19.最近了解并实践了什么新技术

小红书一二面
1.webpack热更新原理
2.canvas跨域怎么解决
3.怎么设计埋点方案
4.webpack的loader和plugin的区别
5.react-virtualized原理
6.cnd回溯原理
7.技术选型为什么要用react，为什么不用vue
8.跨域的手段
9.xss攻击是什么，怎么防御
10.简单请求和非简单请求的区别
11.rem/em/vh/vw  （px2rem)
12.0.1+0.2===0.3 怎么解决精度问题（面试官的答案居然是用轮子）
13.loadable-components原理
14.做过最有成就感的一件事
15.算法 https://leetcode-cn.com/problems/er-cha-shu-de-shen-du-lcof/    https://leetcode-cn.com/problems/assign-cookies/

抖音音乐一面
1.介绍项目，说亮点
2.redux-saga和redux-thunk的区别  为什么要用redux-saga  单元测试是怎么做的
3.浏览器事件循环，与node事件循环的区别，平时有没有写过node
4.echarts底层原理
5.3d图形有没有写过
6.useEffect和useLayoutEffect的区别，DOM闪烁是因为什么
7.实现一个自定义hook，功能是每当某个state变化的时候，返回上一次state的值
答案： 
function usePrevious(state) {
  let ref = useRef();
  useEffect(() => {
    ref.current = state;
  }, [state])
  return ref.current;
}
8.说出下面代码的输出表现
for(var i = 0;i<5;i++){
  setTimeout(() => {console.log(i)}, 1000)
}
console.log(i)
答案:马上输出一个5，隔一秒之后一起输出5个5
9.第8题想要马上输出一个5之后每隔一秒输出一个5，该怎样改，前提是不改变这两段代码的顺序
答案：
for(var i = 0;i<5;i++){
  setTimeout(() => {console.log(i)}, 1000*(i+1))
}
console.log(i)
10.第9题想要马上输出一个0之后每隔一秒输出12345，应该怎么改（面试官提示用promise)，前提是不改变这两段代码的顺序
答案：
for(var i = 0;i<5;i++){
  a(i)
}
const a = (i) => {
  return new Promise(() => {
    setTimeout(() => {console.log(i)}, 1000*i)
  })
}

抖音音乐二面
1.介绍项目，说亮点
2.react-redux用过哪些东西
3.connect是怎么用的，第三个参数是什么
4.react 17的新change
5.hook有用过哪些，useContext的底层实现是什么
6.react都有哪些性能优化
7.你们项目为什么用redux做状态管理，什么情况下要用redux什么情况下不该用
8.redux是怎么初始化和修改的
9.redux设计原则
10.手写实现一个antd的modal，怎样保证z-index是最高的，怎么控制modal既可以渲染在document上，又可以挂载在某个dom节点上 (React Portal)
11.给你两个dom节点，返回他们的离得最近的共同父节点
12.给两个二进制的数字的字符串，返回他们的和的十进制，不要用parseInt，考虑大数相加，返回一个字符串
